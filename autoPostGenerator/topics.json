{
  "2025-04-21": "React.js에 이어서 상태 관리 라이브러리인 Redux를 학습하는 것을 추천드립니다.",
  "2025-04-22 15:05:11": "주제: Redux Saga를 이용한 비동기 처리와 효율적인 상태 관리\n\n블로그 제목: \"Redux Saga: React.js에서의 비동기 처리와 상태 관리를 향상시키는 방법\"",
  "2025-04-22 15:09:22": "Middleware in Redux \n\n블로그 제목: \"Middleware in Redux: 효율적인 비동기 작업과 디버깅을 위한 필수 요소\"",
  "2025-04-24 13:29:50": "웹 프론트엔드 기초 정리",
  "2025-04-24 13:32:39": "Redux Toolkit을 활용한 효율적인 상태관리\n\n블로그 제목: Redux Toolkit 활용: 쉽고 빠른 상태 관리를 위한 해법",
  "2025-04-26 11:43:29": "프론트엔드 테스트 기법과 Jest\n\n블로그 제목: React에서 Jest를 활용한 프론트엔드 테스트 기법 마스터하기",
  "2025-04-27 10:46:25": "React-Router를 이용한 싱글 페이지 어플리케이션 구현\n\n블로그 제목: React-Router 활용 가이드: 싱글 페이지 어플리케이션 구현하기",
  "2025-04-28 14:14:01": "주제: Next.js에서의 Server Side Rendering \n\n블로그 제목: Next.js에서의 Server Side Rendering: 퍼포먼스 향상과 SEO 최적화로 리더한 걸음 더 나아가기",
  "2025-04-29 07:07:56": "React Hooks를 활용한 상태관리와 컴포넌트 생명주기\n\n블로그 제목: React Hooks를 접속해서 상태 관리와 컴포넌트 생명주기를 한단계 더 알아보기",
  "2025-04-30 15:43:07": "React에서 TypeScript를 활용한 강력한 타입 관리\n\n블로그 제목: React에서 TypeScript로 향상된 타입안정성과 코드 퀄리티 Realize하기",
  "2025-05-01 08:49:49": "주제: Redux와 TypeScript의 연계 사용\n블로그 제목: Redux와 TypeScript를 활용한 더 안정적인 상태 관리 방법에 대한 딥다이브"
}